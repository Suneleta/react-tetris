{"version":3,"sources":["img/bg.png","gameHelpers.js","components/styles/StyledTetris.js","tetrominoes.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOES","0","shape","color","I","J","L","O","S","Z","T","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6063d9ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n\tArray.from(Array(STAGE_HEIGHT), () =>\n\t\tnew Array(STAGE_WIDTH).fill([0, 'clear'])\n\t)\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n\tfor (let y = 0; y < player.tetromino.length; y += 1) {\n\t\tfor (let x = 0; x < player.tetromino[y].length; x += 1) {\n\n\t\t\t// 1. Check that we're on an actual Tetromino cell\n\t\t\tif (player.tetromino[y][x] !== 0) {\n\t\t\t\tif (\n\t\t\t\t\t// 2. Check that we're within bounds of the stage height (y)\n\t\t\t\t\t// We shouldn't go through the bottom of the play area\n\t\t\t\t\t!stage[y + player.pos.y + moveY] ||\n\t\t\t\t\t// 3. Check that move does not exceed the stage width (x)\n\t\t\t\t\t!stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n\t\t\t\t\t// 4. Check that the cell we're moving to isn't set to clear\n\t\t\t\t\tstage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n\t\t\t\t\t\t'clear'\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n}","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n\twidth: 100vw;\n\theight: 100vh;\n\tbackground: url(${bgImage}) #000;\n\tbackground-size: cover;\n\toverflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tpadding: 40px;\n\tmargin: 0 auto;\n\tmax-width: 900px;\n\n\taside {\n\t\twidth: 100%;\n\t\tmax-width: 200px;\n\t\tdisplay: block;\n\t\tpadding: 0 20px;\n\t}\n`","export const TETROMINOES = {\n\t// Empty stage for initial state\n\t0: { shape: [[0]], color: '0, 0, 0' },\n\n\t// the long boy, \"I\" tetromino\n\tI: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t[0, 'I', 0, 0],\n\t\t\t \t\t\t\t\t[0, 'I', 0, 0],\n\t\t\t \t\t\t\t\t[0, 'I', 0, 0],\n\t\t\t \t\t\t\t\t[0, 'I', 0, 0]\t\n\t\t\t \t\t\t\t],\n\t\t\t color: '80, 227, 230',\n\t},\n\n\t// the \"J\"-shaped tetromino\n\tJ: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t[0,  'J', 0],\n\t\t\t \t\t\t\t\t[0,  'J', 0],\n\t\t\t \t\t\t\t\t['J','J', 0]\n\t\t\t \t\t\t\t],\n\t\t\t color: '223, 173, 36',\n\t},\n\n\t// the \"L\"-shaped tetromino\n\tL: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t[0, 'L', 0],\n\t\t\t \t\t\t\t\t[0, 'L', 0],\n\t\t\t \t\t\t\t\t[0, 'L','L']\n\t\t\t \t\t\t\t],\n\t\t\t color: '36, 95, 223',\n\t},\n\n\t// the \"O\"-shaped tetromino\n\tO: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t['O', 'O'],\n\t\t\t \t\t\t\t\t['O', 'O'],\n\t\t\t \t\t\t\t],\n\t\t\t color: '223, 217, 36',\n\t},\n\n\t// \"S\"-shaped tetromino\n\tS: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t[0,   'S', 'S'],\n\t\t\t \t\t\t\t\t['S', 'S', \t0 ],\n\t\t\t \t\t\t\t\t[0, \t 0, \t0 ]\n\t\t\t \t\t\t\t],\n\t\t\t color: '48, 211, 56',\n\t},\n\n\t// \"Z\"-shaped tetromino\n\tZ: {\n\t\t\t shape: [\n\t\t\t \t\t\t\t\t['Z', 'Z',  0 ],\n\t\t\t \t\t\t\t\t[0, \t'Z', 'Z'],\n\t\t\t \t\t\t\t\t[0,    0,   0 ]\n\t\t\t \t\t\t\t],\n\t\t\t color: '132, 61, 198',\n\n\t},\n\n\t// \"T\"-shaped tetromino\n\tT: {\n\t\t\t shape: [\n\t\t\t\t\t\t\t\t['T', 'T', 'T'],\n\t\t\t\t\t\t\t\t[0,   'T',  0 ],\n\t\t\t\t\t\t\t\t[0, \t 0, \t0.],\n\t\t\t\t\t\t\t],\n\t\t\t color: '227, 78, 78',\n\t},\n}\n\nexport const randomTetromino = () => {\n\tconst tetrominoes = 'IJLOSTZ';\n\tconst randTetromino = \n\t\ttetrominoes[Math.floor(Math.random() * tetrominoes.length)];\n\treturn TETROMINOES[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n\tconst [ stage, setStage ] = useState(createStage());\n\tconst [rowsCleared, setRowsCleared] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetRowsCleared(0);\n\n\t\tconst sweepRows = newStage =>\n\t\tnewStage.reduce((acc, row) => {\n          if(row.findIndex(cell => cell[0] === 0) === -1){\n\t\t\t  setRowsCleared(prev => prev + 1);\n\t\t\t  acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n\t\t\t  return acc;\n\t\t  }\n\t\t  acc.push(row);\n\t\t  return acc;\n\t\t}, []);\n\n\t\tconst updateStage = prevStage => {\n\t\t\t// First flush the stage\n\t\t\tconst newStage = prevStage.map(row =>\n\t\t\t\trow.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n\t\t\t);\n\n\t\t\t// Then draw the tetromino\n\t\t\tplayer.tetromino.forEach((row, y) => {\n\t\t\t\trow.forEach((value, x) => {\n\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\tnewStage[(y + player.pos.y)][(x + player.pos.x)] = [\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t`${player.collided ? 'merged' : 'clear'}`,\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Then check for collisions\n\t\t\tif (player.collided) {\n\t\t\t\tresetPlayer();\n\t\t\t\treturn sweepRows(newStage);\n\t\t\t}\n\n\t\t\treturn newStage;\n\t\t};\n\n\t\tsetStage(prev => updateStage(prev));\n\n\t}, [player, resetPlayer] );\n\n\treturn [ stage, setStage, rowsCleared ];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: repeat(\n\t\t${props => props.height},\n\t\tcalc(25vw / ${props => props.width})\n\t);\n\tgrid-template-columns: repeat(${props => props.width}, 1fr);\n\tgrid-gap: 1px;\n\tborder: 2px solid #333;\n\twidth: 100%;\n\tmax-width: 25vw;\n\tbackground: #111;\n`","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n\twidth: auto;\n\tbackground: rgba(${props => props.color}, 0.8);\n\tborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n\tborder-bottom-color: rgba(${props => props.color}, 0.1);\n\tborder-right-color: rgba(${props => props.color}, 1);\n\tborder-top-color: rgba(${props => props.color}, 1);\n\tborder-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOES } from '../tetrominoes';\n\nconst Cell = ({ type }) => (\n\t<StyledCell type={type} color={TETROMINOES[type].color}/>\n)\n//so that with every render only the changed cells are rerendered\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\n//Components\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n\t<StyledStage width={ stage[0].length} height={stage.length}>\n\t\t{stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n\t</StyledStage>\n);\n\nexport default Stage;","import styled from 'styled-components';\n\n\nexport const StyledDisplay = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\talign-items: center;\n\tmargin: 0 0 20px 0;\n\tpadding: 20px;\n\tborder: 4px solid #333;\n\tmin-height: 30px;\n\twidth: 100%;\n\tborder-radius: 15px;\n\tcolor: ${props => (props.gameOver ? 'red' : '#999')};\n\tbackground: #000;\n\tfont-family: Pixel, Helvetica, Arial, sans-serif;\n\tfont-size: 0.8rem;\n`","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n\t<StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n\tbox-sizing: border-box;\n\tmargin: 0 0 20px 0;\n\tpadding: 20px;\n\tmin-height: 30px;\n\twidth: 100%;\n\tborder-radius: 10px;\n\tborder: none;\n\tcolor: white;\n\tbackground: #333;\n\tfont-family: Pixel, Helvetica, Arial, sans-serif;\n\tfont-size: 1rem;\n\toutline: none;\n\tcursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n\t<StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetris, StyledTetrisWrapper } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useInterval } from '../hooks/useInterval';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n\tconst [dropTime, setDropTime] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n\tconsole.log('re-render');\n\n\tconst movePlayer = dir => {\n\t\tif (!checkCollision(player, stage, { x: dir, y: 0})) {\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\n\t\t}\n\t}\n\n\tconst startGame = () => {\n\t\t// Reset everything\n\t\tsetStage(createStage());\n\t\tsetDropTime(1000);\n\t\tresetPlayer();\n\t\tsetGameOver(false);\n\t\tsetScore(0);\n\t\tsetRows(0);\n\t\tsetLevel(0);\n\t}\n\n\tconst drop = () => {\n\t\t//increase level after 10 rows cleared\n\t\tif (rows > (level + 1) * 10){\n\t\t\tsetLevel(prev => prev + 1);\n\t\t\tsetDropTime(1000 / (level + 1) + 200)\n\t\t}\n\t\tif (!checkCollision(player, stage, { x: 0, y: 1})) {\n\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\n\n\t\t} else {\n\n\t\t\tif (player.pos.y < 1) {\n\t\t\t\tconsole.log(\"GAME OVER\");\n\t\t\t\tsetGameOver(true);\n\t\t\t\tsetDropTime(null);\n\t\t\t}\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true })\n\n\t\t}\n\t\t\n\t}\n\n\tconst keyUp = ({ keyCode }) => {\n\t\tif(!gameOver) {\n\t\t\tif (keyCode === 40) {\n\t\t\t\tsetDropTime(1000 / (level + 1) + 200)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst dropPlayer = () => {\n\t\tsetDropTime(null);\n\t\tdrop();\n\t}\n\n\tconst move = ({ keyCode }) => {\n\t\tif (!gameOver) {\n\t\t\tif(keyCode === 37) { // Left Arrow Key\n\t\t\t\tmovePlayer(-1);\n\t\t\t} else if (keyCode === 39){ // Right Arrow Key\n\t\t\t\tmovePlayer(1);\n\t\t\t} else if (keyCode === 40){ // Down Arrow Key\n\t\t\t\tdropPlayer();\n\t\t\t} else if (keyCode === 38){ // Up Arrow Key - rotate CW\n\t\t\t\tplayerRotate(stage, 1);\n\t\t\t} else if (keyCode === 90){ // 'z' key - rotate CCW\n\t\t\t\tplayerRotate(stage, -1);\n\t\t\t}\n\t\t}\n\t}\n\n\tuseInterval(() => {\n\t\tdrop();\n\t}, dropTime)\n\n\treturn (\n\t\t<StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n\t\t\t<StyledTetris>\n\t\t\t\t<Stage stage={stage}/>\n\t\t\t\t<aside>\n\t\t\t\t\t{gameOver ? (\n\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Display text={`Score; ${score}`} />\n\t\t\t\t\t\t<Display text={`Rows; ${rows}`} />\n\t\t\t\t\t\t<Display text={`Level; ${level}`}  />\n\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<StartButton callback={startGame}/>\n\t\t\t\t</aside>\n\t\t\t</StyledTetris>\n\t\t</StyledTetrisWrapper>\n\t);\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOES, randomTetromino } from '../tetrominoes';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n\tconst [ player, setPlayer ] = useState({\n\t\tpos: { x: 0, y: 0 },\n\t\ttetromino: TETROMINOES[0].shape,\n\t\tcollided: false,\n\t});\n\n\tconst rotate = (matrix, dir) => {\n\t\t// transpose rows to cols\n\t\tconst rotatedTetro = matrix.map((_, index) => \n\t\t\tmatrix.map(col => col[index]),\n\t\t);\n\t\t// Reverse each row to get a rotated matrix\n\t\tif(dir > 0) return rotatedTetro.map(row => row.reverse());\n\t\treturn rotatedTetro.reverse();\n\t}\n\n\tconst playerRotate = (stage, dir) => {\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\n\t\tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n\t\tconst pos = clonedPlayer.pos.x;\n\t\tlet offset = 1;\n\t\twhile(checkCollision(clonedPlayer, stage, { x: 0, y: 0})){\n\t\t\tclonedPlayer.pos.x += offset;\n\t\t\toffset = -(offset + (offset > 0 ? 1 : -1));\n\t\t\tif (offset > clonedPlayer.tetromino[0].length){\n\t\t\t\trotate(clonedPlayer.tetromino, -dir);\n\t\t\t\tclonedPlayer.pos.x = pos;\n\t\t\t}\n\t\t}\n\n\t\tsetPlayer(clonedPlayer);\n\t}\n\n\tconst updatePlayerPos = ({ x, y, collided }) => {\n\t\tsetPlayer(prev => ({\n\t\t\t...prev,\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n\t\t\tcollided,\n\t\t}))\n\t}\n\n\tconst resetPlayer = useCallback(() => {\n\t\tsetPlayer({\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n\t\t\ttetromino: randomTetromino().shape,\n\t\t\tcollided: false,\n\t\t})\n\t}, [])\n\n\treturn [ player, updatePlayerPos, resetPlayer, playerRotate ];\n}","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints =[40, 100, 300, 1200];\n    const calcScore = useCallback(() => {\n            if(rowsCleared > 0) {\n                setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n                setRows(prev => prev + rowsCleared);\n            }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        },[level, linePoints, rowsCleared,]);\n        \n    useEffect(() => {\n       calcScore();\n    },[calcScore, rowsCleared, score])\n    return [score, setScore, rows, setRows, level, setLevel];\n};\n  ","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}